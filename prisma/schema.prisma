generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum ProjectType {
  DEFAULT
  LIB
}

model Project {
  id           String           @id @default(cuid())
  title        String
  description  String?
  tags         TagsOnProjects[]
  type         ProjectType      @default(DEFAULT)
  author       User?            @relation(fields: [authorId], references: [id])
  authorId     String?
  files        Json?
  params       Json?
  graph        Json?
  layout       Json?
  config       Json?
  published    Boolean          @default(false)
  forkedFrom   Project?         @relation("ProjectForks", fields: [forkedFromId], references: [id])
  forkedFromId String?
  forkedBy     Project[]        @relation("ProjectForks")
  template     Boolean          @default(false)
  createdAt    DateTime         @default(now()) @map(name: "created_at")
  updatedAt    DateTime         @updatedAt @map(name: "updated_at")
}

model TagsOnProjects {
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
  assignedAt DateTime @default(now())

  @@id([projectId, tagId])
}

model Tag {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  projects    TagsOnProjects[]
  creator     User?            @relation(fields: [creatorId], references: [id])
  creatorId   String?
  createdAt   DateTime         @default(now()) @map(name: "created_at")
  updatedAt   DateTime         @updatedAt @map(name: "updated_at")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  config        Json?
  projects      Project[]
  Tag           Tag[]

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             String    @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       String   @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
